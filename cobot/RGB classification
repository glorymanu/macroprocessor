#include <Servo.h>

Servo shoulderFront;
Servo shoulderSide;
Servo shoulderDelt;
Servo elbow;
Servo grip;

const int piezoPin = 12; // 피에조 부저 핀
const int sensorPin = A0; // TCS3200 센서 출력 핀
const int forcePin = A1; // 외부력 감지 센서 핀

void setup() {
  Serial.begin(9600);

  shoulderFront.attach(8);
  shoulderSide.attach(9);
  shoulderDelt.attach(10);
  elbow.attach(11);
  grip.attach(13);

  pinMode(piezoPin, OUTPUT);
  pinMode(forcePin, INPUT);
}

void loop() {
  int red_light = analogRead(sensorPin);
  delay(100); // 임의의 딜레이
  int green_light = analogRead(sensorPin);
  delay(100); // 임의의 딜레이
  int blue_light = analogRead(sensorPin);

  Serial.print("빨간색: ");
  Serial.print(red_light);
  Serial.print(" 초록색: ");
  Serial.print(green_light);
  Serial.print(" 파란색: ");
  Serial.println(blue_light);

  byte result = colorTest(red_light, green_light, blue_light);

  Serial.print("색깔 결과 = ");
  Serial.println(result);

  if (result > 0) {
    servoMove(result);
  }

  // 외부력 감지 시 경고음 울리기
  if (externalForceDetected()) {
    tone(piezoPin, 1000, 1000); // 피에조 부저로 1초 동안 경고음 울리기
  }

  delay(500);
}

byte colorTest(int red, int green, int blue) {
  byte color = 0;

  // 빨간색 물체
  if (red > green && red > blue && red > 100) {
    color = 1;
  }

  // 초록색 물체
  if (green > red && green > blue && green > 100) {
    color = 2;
  }

  // 파란색 물체
  if (blue > red && blue > green && blue > 100) {
    color = 3;
  }

  return color;
}


void servoMove(byte color) {
  // 색깔에 따른 로봇팔 제어 로직
  // (서보 모터를 움직이는 부분)

  // 예시:
  if (color == 1) { // 빨간색
    shoulderFront.write(130);
    shoulderSide.write(87);
    shoulderDelt.write(330);
    elbow.write(378);
    grip.write(140);
    // 추가적으로 움직임이 필요한 경우 추가
  } else if (color == 2) { // 초록색
    // 다른 색깔에 대한 동작 추가
  } else if (color == 3) { // 파란색
    // 다른 색깔에 대한 동작 추가
  }

  // 각 서보 모터의 움직임 대기 시간
  delay(2000);

  // 움직임이 필요한 경우 추가

  // 만약 물체를 제대로 잡았는지 확인
  if (objectSuccessfullyGripped()) {
    // 물체를 잘 잡았을 때의 추가 동작이나 처리
  } else {
    // 물체를 잡지 못했을 때의 추가 동작이나 처리
    tone(piezoPin, 1000, 1000); // 실패 알림음
    delay(1000);
  }

  // 완료 후 초기 위치로 되돌리기
  shoulderFront.write(85); // 초기 위치로
  shoulderSide.write(90);
  shoulderDelt.write(45);
  elbow.write(60);
  grip.write(0);

  // 초기 위치 대기 시간
  delay(2000);
}

bool objectSuccessfullyGripped() {
  // 예상하는 집게 각도
  int expectedGripAngle = 90; // 예시: 90도

  // 현재 집게의 각도 읽기
  int currentGripAngle = grip.read();

  // 각도의 허용 범위 설정
  int angleTolerance = 10; // 예시: 10도

  // 현재 각도가 예상 범위 내에 있는지 확인
  if (currentGripAngle >= (expectedGripAngle - angleTolerance) && 
      currentGripAngle <= (expectedGripAngle + angleTolerance)) {
    // 물체를 성공적으로 잡았다고 판단
    return true;
  } else {
    // 물체를 잡지 못했다고 판단
    return false;
  }
}

bool externalForceDetected() {
  // 외부력 감지 로직
  // (외부력을 감지하는 부분)

  // 예시: 가변저항의 값이 특정 범위를 벗어나면 외부력으로 간주
  int forceSensorValue = analogRead(A1); // 가변저항의 핀에 연결된 아날로그 핀
  return (forceSensorValue < 100 || forceSensorValue > 900); // 값은 상황에 따라 조절
}
