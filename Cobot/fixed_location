#include <Wire.h>
#include <SparkFun_APDS9960.h>
#include <Servo.h>
 
SparkFun_APDS9960 apds = SparkFun_APDS9960();
 
uint16_t ambient_light = 0;
uint16_t red_light = 0;
uint16_t green_light = 0;
uint16_t blue_light = 0;
uint8_t proximity_data = 0;
 
Servo bottom;
Servo arm1;
Servo arm2;
Servo grip;
 
void setup() {
  Serial.begin(9600);
 
  bottom.attach(8);
  arm1.attach(9);
  arm2.attach(10);
  grip.attach(11);
 
  if ( apds.init() ) {
    Serial.println(F("APDS-9960 initialization complete"));
  } else {
    Serial.println(F("Something went wrong during APDS-9960 init!"));
  }
 
  if ( apds.enableProximitySensor(false) ) {
    Serial.println(F("Proximity sensor is now running"));
  } else {
    Serial.println(F("Something went wrong during sensor init!"));
  }
 
  if ( apds.enableLightSensor(false) ) {
    Serial.println(F("Light sensor is now running"));
  } else {
    Serial.println(F("Something went wrong during light sensor init!"));
  }
 
  delay(500);
 
  bottom.write(120);
  arm1.write(85);
  arm2.write(140);
  grip.write(140);
}
 
void loop() {
  if ( !apds.readProximity(proximity_data) ) {
    Serial.println("Error reading proximity value");
  } else {
    Serial.print("Proximity: ");
    Serial.println(proximity_data);
 
    if (proximity_data > 250) {
      byte result = colorTest();
 
      Serial.print("RESULT = ");
      Serial.println(result);
      if (result > 0) {
        servoMove(result);
      }
    }
  }
 
  delay(500);
}
 
byte colorTest() {
  byte color = 0;
 
  if (  !apds.readAmbientLight(ambient_light) ||
        !apds.readRedLight(red_light) ||
        !apds.readGreenLight(green_light) ||
        !apds.readBlueLight(blue_light) ) {
    Serial.println("Error reading light values");
  }
 
  else {
    Serial.print("Ambient: ");
    Serial.print(ambient_light);
    Serial.print(" Red: ");
    Serial.print(red_light);
    Serial.print(" Green: ");
    Serial.print(green_light);
    Serial.print(" Blue: ");
    Serial.println(blue_light);
 
    // 빨간색 물체
    if (red_light > green_light && red_light > blue_light && red_light > 100) {
      color = 1;
    }
 
    // 초록색 물체
    if (green_light > red_light && green_light > blue_light && green_light > 100) {
      color = 2;
    }
 
    // 파란색 물체
    if (blue_light > red_light && blue_light > green_light && blue_light > 100) {
      color = 3;
    }
  }
  return color;
}
 
 
void servoMove(byte color) {
  arm1.write(130);
  delay(1000);
  grip.write(90);
  delay(2000);
 
  arm1.write(85);
  delay(2000);
 
  if (color == 1) {
    bottom.write(180);
    delay(2000);
    arm1.write(130);
    delay(2000);
    grip.write(140);
    delay(2000);
  }
 
  else if (color == 2) {
    bottom.write(70);
    delay(2000);
    arm1.write(130);
    delay(2000);
    grip.write(140);
    delay(2000);
  }
 
  else if (color == 3) {
    bottom.write(10);
    delay(2000);
    arm1.write(130);
    delay(2000);
    grip.write(140);
    delay(2000);
  }
 
  arm1.write(85);
  delay(2000);
 
  bottom.write(120);
  arm1.write(85);
  arm2.write(140);
  grip.write(140);
  delay(500);
